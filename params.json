{"name":"Shake","body":"## Information\r\n\r\n<table>\r\n<tr>\r\n<td>Package</td><td>shake</td>\r\n</tr>\r\n<tr>\r\n<td>Description</td>\r\n<td>Deployment tool for node</td>\r\n</tr>\r\n<tr>\r\n<td>Node Version</td>\r\n<td>>= 0.4</td>\r\n</tr>\r\n</table>\r\n\r\n## Usage\r\n\r\n### Running tasks\r\n```$ shake setup:deploy:something[\"some arg\", true, 2]:status```\r\n\r\n### Defining Tasks\r\n\r\nAdd a .shake.coffee or .shake.js file to your project root.\r\n\r\nA task is a function that takes 3 arguments. Any arguments inside [ and ] will be applied to the task function after the initial 3.\r\n\r\n```coffee-script\r\nmodule.exports =\r\n  sometask: (local, remote, done) ->\r\n    # local = local machine\r\n    # remote = remote machine (defined in target)\r\n    local.exec \"\"\"\r\n    whoami\r\n    ls -la\r\n    mkdir test\r\n    \"\"\", (res) ->\r\n      # res = array of stdout+stderr\r\n      remote.exec \"ls -la\", (res) ->\r\n        done res # Call this when the task is finished\r\n        # done() will start the next tasks and log its arguments\r\n```\r\n\r\n### Example config\r\nHere is an example config demonstrating basic functionality:\r\n\r\n```coffee-script\r\n# This is a non-standard config used only within this config\r\n# you can make this file look like whatever you want as long as you export\r\n# your tasks and target\r\napp =\r\n  sudo: \"sudo\" # Change this to \"\" to disable sudo\r\n  parent: '/var/www/'\r\n  name: 'your cool app name'\r\napp.repository = \"git@github.com:your cool username/#{app.name}.git\"\r\napp.folder = \"#{app.parent}#{app.name}/\"\r\napp.start = \"coffee #{app.folder}start.coffee\"\r\napp.log = \"/var/log/#{app.name}.log\"\r\n\r\n\r\nmodule.exports =\r\n  target: 'your cool server'\r\n  clean: (local, remote, done) ->\r\n    remote.exec \"\"\"\r\n    #{app.sudo} rm -rf #{app.folder}\r\n    \"\"\", done\r\n\r\n  setup: (local, remote, done) ->\r\n    remote.exec \"\"\"\r\n    NAME=`whoami`;\r\n    #{app.sudo} mkdir -p #{app.folder}\r\n    #{app.sudo} chown -R $NAME:$NAME #{app.folder}\r\n    git clone #{app.repository} #{app.folder}\r\n    cd #{app.folder}\r\n    npm install\r\n    \"\"\", done\r\n\r\n  deploy: (local, remote, done) ->\r\n    remote.exec \"\"\"\r\n    cd #{app.folder}\r\n    git pull\r\n    sudo killall node\r\n    npm install\r\n    #{app.sudo} stop #{app.name}\r\n    #{app.sudo} start #{app.name}\r\n    \"\"\", done\r\n\r\n  start: (local, remote, done) ->\r\n    remote.exec \"#{app.sudo} start #{app.name}\", done\r\n\r\n  stop: (local, remote, done) ->\r\n    remote.exec \"#{app.sudo} stop #{app.name}\", done\r\n\r\n  restart: (local, remote, done) ->\r\n    remote.exec \"#{app.sudo} restart #{app.name}\", done\r\n\r\n  log: (local, remote, done) ->\r\n    remote.exec \"tail -n 100 #{app.log}\", done\r\n\r\n  status: (local, remote, done) ->\r\n    remote.exec \"ps -eo args | grep '#{app.name}' | grep -v grep\", (res) ->\r\n      done if res then \"Online\" else \"Offline\"\r\n```","tagline":"Deployment tool for node","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}